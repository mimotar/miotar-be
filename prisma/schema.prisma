// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                   @id @default(autoincrement())
  email               String                @unique
  name                String?
  profile             Profile?
  password            String
  personalAccessToken PersonalAccessToken[]
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt()

  @@map("users")
}

model Profile {
  id     Int      @id @default(autoincrement())
  userId Int      @unique
  role   UserRole @default(USER)
  user   User     @relation(fields: [userId], references: [id], onUpdate: Restrict, onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  @@map("profiles")
}

model PersonalAccessToken {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @db.Text()
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  expireAt  DateTime
  user      User     @relation(fields: [userId], references: [id], onUpdate: Restrict, onDelete: Cascade)

  @@map("personal_access_tokens")
}

enum UserRole {
  USER
  ADMIN
}
